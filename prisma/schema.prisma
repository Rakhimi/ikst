generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  hashedPassword String    // Storing the hashed password
  maiden         String
  sport          String
  color          String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  role UserRole @default(USER)

  profiles       Profile[] @relation("UserProfiles")
  questionSets   QuestionSet[] @relation("UserQuestionSets")  // Relation to QuestionSets
}

model Profile {
  id         Int     @id @default(autoincrement())
  firstName  String   @default("Abdul")
  lastName   String   @default("Abdul")
  school     String
  grade      String

  user       User    @relation("UserProfiles", fields: [userId], references: [id])
  userId     Int     // Foreign key for User
}

enum AnswerOption {
  A
  B
  C
  D
}

// New Model for Question Sets
model QuestionSet {
  id          Int        @id @default(autoincrement())
  title       String     // Title or description of the question set
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  user        User       @relation("UserQuestionSets", fields: [userId], references: [id])
  userId      Int        // Foreign key for User

  questions   Question[] @relation("SetQuestions")  // Relation to questions
}

model Question {
  id          Int          @id @default(autoincrement())
  question    String
  option1     String
  option2     String
  option3     String
  option4     String
  answer      AnswerOption
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  questionSet QuestionSet   @relation("SetQuestions", fields: [questionSetId], references: [id])
  questionSetId Int         // Foreign key for QuestionSet
}
